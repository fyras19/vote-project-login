version: "3"
services:
  vote-loadbalancer:
    image: europe-west9-docker.pkg.dev/login-k8s-416220/voting-images/nginx
    build: ./nginx/
    ports:
      - 5000:5000
    depends_on:
      - vote-1
      - vote-2
    networks:
      - front-tier

  result:
    image: europe-west9-docker.pkg.dev/login-k8s-416220/voting-images/result
    build: ./result/
    ports:
      - 4000:4000
    depends_on:
      - db
    networks:
      - back-tier
      - front-tier

  seed:
    image: europe-west9-docker.pkg.dev/login-k8s-416220/voting-images/seed
    build: ./seed-data/
    depends_on:
      - nginx
    networks:
      - front-tier

  vote-template: &vote-template
    image: europe-west9-docker.pkg.dev/login-k8s-416220/voting-images/vote
    build: ./vote/
    ports:
      - 5000
    depends_on:
      - redis
    networks:
      - back-tier
      - front-tier

  vote-1:
    <<: *vote-template
    ports:
      - 5001:5000

  vote-2:
    <<: *vote-template
    ports:
      - 5002:5000

  worker:
    image: europe-west9-docker.pkg.dev/login-k8s-416220/voting-images/worker
    build:
      context: ./worker/
      args:
        - TARGETPLATFORM=linux/amd64
        - TARGETARCH=amd64
        - BUILDPLATFORM=linux/amd64
    depends_on:
      - db
      - redis
    networks:
      - back-tier

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - back-tier

  db:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      - back-tier

networks:
  front-tier:
  back-tier:

volumes:
  db-data:
